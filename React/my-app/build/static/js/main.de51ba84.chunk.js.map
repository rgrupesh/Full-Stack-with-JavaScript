{"version":3,"sources":["components/HeaderComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutUsComponent.js","components/FooterComponent.js","components/MenuComponents.js","components/DishDetailComponents.js","redux/actioncreators.js","redux/actiontypes.js","components/MainComponents.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Header","props","toggleNav","bind","toggleModal","handleLogin","state","isNavOpen","isModalOpen","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","expand","className","onClick","href","src","height","width","alt","isOpen","navbar","to","outline","toggle","onSubmit","htmlFor","type","id","name","innerRef","input","check","color","Component","Loading","baseUrl","RenderCard","item","isLoading","errMess","in","tranformProps","exitTranform","image","designation","description","Home","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leadersErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","resetFeedbackForm","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","About","RenderLeader","left","object","body","heading","active","title","list","leaders","map","key","Footer","RenderMenuItem","Menu","menu","dishes","Cardkey","CommentForm","postComment","dishId","rating","author","comment","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","promosErrMess","exact","match","parseInt","params","commentsErrMess","addComment","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","message","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telno","email","agree","contactType","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de51ba84.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Navbar, NavbarBrand , Nav, NavbarToggler, Collapse, NavItem, Jumbotron , ModalHeader, Button, Modal, ModalBody, Form, FormGroup, Input, Label} from 'reactstrap';\nimport { NavLink } from \"react-router-dom\";\n\n\nclass Header extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n\n        this.state = {\n          isNavOpen: false,\n          isModalOpen: false\n        };\n      }\n\n      toggleNav() {\n        this.setState({\n          isNavOpen: !this.state.isNavOpen\n        });\n      }\n\n      toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n          });\n\n      }\n\n      handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n\n    render(){\n        return(\n            <React.Fragment>\n                <Navbar expand=\"sm\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                            <NavbarBrand  className=\"mr-auto\" href=\"/\">\n                                <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\n                                alt=\"Food\" />\n                            </NavbarBrand>\n                        <Collapse  isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\" fa fa-home fa-lg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\" fa fa-info fa-lg\"></span> AboutUs\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\" fa fa-list fa-lg\"></span> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\" fa fa-address-card fa-lg\"></span> contactus\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>  \n                            <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <Button outline onClick={this.toggleModal}>\n                                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                </Button>\n                            </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"cointainer\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Food</h1>\n                                <p>We sell good food.</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>\n                        Login\n                    </ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n\n        );\n    }\n}\n\nexport default Header;\n","import React from \"react\";\n\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = \"http://localhost:3001/\";\n\n","import React from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle} from 'reactstrap';\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { FadeTransform } from \"react-animation-components\";\n\n\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if (isLoading) {\n        return(\n                <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n                <h4>{errMess}</h4>\n        );\n    }\n    else \n        return(\n            <FadeTransform in \n                tranformProps = {{\n                    exitTranform: \"scale(0.5) translateY(-50%)\"\n                }}>\n            <Card>\n                <CardImg src={ baseUrl + item.image } alt={item.name} />\n                <CardBody>\n                <CardTitle>{item.name}</CardTitle>\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n                <CardText>{item.description}</CardText>\n                </CardBody>\n            </Card>\n            </FadeTransform>\n    );\n\n}\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} \n                    isLoading={props.dishesLoading}\n                    errMess={props.dishesErrMess}/>\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion} \n                    isLoading={props.promoLoading} \n                    errMess={props.promoErrMess}/>\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader} \n                    isLoading={props.leaderLoading} \n                    errMess={props.leadersErrMess}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport { Button, Label, Col, Row} from \"reactstrap\";\nimport { Control, Form, Errors } from \"react-redux-form\";\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n\n    constructor(props){\n        super(props);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    handleSubmit(values){\n        console.log(\"Current state is : \" + JSON.stringify(values));\n        alert(\"Current state is : \" + JSON.stringify(values));\n        this.props.resetFeedbackForm();\n\n    }\n\n    render(){\n\n        return(\n            <div className=\"container\">\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            Nepal<br />\n                            <i className=\"fa fa-phone\"></i>: +123456789<br />\n                            <i className=\"fa fa-fax\"></i>: +123456789<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                    <div className=\"row row-content\">\n                        <div className=\"col-12\">\n                            <h3> send your feedback</h3>\n                        </div>\n                        <div className=\"col-12 col-md-9\">\n                            <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\n                                            }}\n                                            />\n                                        <Errors \n                                            className=\"text-danger\"\n                                            model=\".firstname\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: \"Required\",\n                                                minLength: \"Must be greater than 3 chars\",\n                                                maxLength: \"Must be less than 16 chars\"\n                                            }}\n                                        />    \n                                            \n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}/>\n\n                                        <Errors \n                                            className=\"text-danger\"\n                                            model=\".lastname\"\n                                            show=\"touched\"\n                                            messages={{\n                                                required: \"Required\",\n                                                minLength: \"Must be greater than 3 chars\",\n                                                maxLength: \"Must be less than 16 chars\"\n                                            }}\n                                        />  \n                                            \n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"telno\" md={2}>TelNo.</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".telno\" id=\"telno\" name=\"telno\" placeholder=\"Telno.\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }} />\n\n                                        <Errors \n                                        className=\"text-danger\"\n                                        model=\".telno\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"Required\",\n                                            minLength: \"Must be greater than 2 numbers\" ,\n                                            maxLength: \"Must be less than 15 numberss or less\",\n                                            isNumber: \"Must be a number\"\n                                        }}\n                                        /> \n                                            \n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"email\" md={2}>Email</Label>\n                                    <Col md={10}>\n                                        <Control.text model=\".email\" id=\"email\" name=\"email\" placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}/>\n                                        <Errors \n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: \"Required\",\n                                            validEmail: \"Invalid Email address\"\n                                        }}\n                                        /> \n                                            \n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col md={{size:6,offset:2}}>\n                                        <div className=\"form-check\">\n                                            <Label check>\n                                                <Control.checkbox model=\".agree\" name=\"agree\" className=\"form-check-input\" />{\"\"}\n                                                <strong >\n                                                    May we contact you?\n                                                </strong>\n                                            </Label>\n                                        </div>\n                                    </Col>\n                                    <Col md={{size:3,offset:1}}>\n                                        <Control.select model=\".contactType\" name=\"contactType\" className=\"form-control\" >\n                                        <option>\n                                            Tel.\n                                        </option>\n                                        <option>\n                                            Email\n                                        </option>\n                                        </Control.select>\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Label htmlFor=\"message\" md={2}>Your feedback</Label>\n                                    <Col md={10}>\n                                        <Control.textarea model=\".message\" id=\"message\" name=\"message\" placeholder=\"Type here\" rows=\"10\"\n                                            className=\"form-control\" />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col md={{size:10, offset:2}}>\n                                    <Button type=\"submit\" color=\"primary\">Send feedback</Button>\n                                    </Col>\n\n                                </Row>\n                            </Form>\n                        </div>\n                    </div>\n            </div>\n        );\n\n    }\n    \n}\n\nexport default Contact;","import React from \"react\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Card,\n  CardBody,\n  CardHeader,\n  Media\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\n\nfunction About(props) {\n  function RenderLeader({ leader }) {\n    return (\n      <Media className=\"mt-5\">\n        <Media left className=\"mr-5\">\n          <Media object src={baseUrl + leader.image} alt={leader.name} />\n        </Media>\n        <Media body>\n          <Media heading>{leader.name}</Media>\n          <p>{leader.designation}</p>\n          {leader.description}\n        </Media>\n      </Media>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/home\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"col-12\">\n          <h3>About Us</h3>\n          <hr />\n        </div>\n      </div>\n      <div className=\"row row-content\">\n        <div className=\"col-12 col-md-6\">\n          <h2>Our History</h2>\n          <p>\n            Started in 2010, Ristorante con Fusion quickly established itself as\n            a culinary icon par excellence in Hong Kong. With its unique brand\n            of world fusion cuisine that can be found nowhere else, it enjoys\n            patronage from the A-list clientele in Hong Kong. Featuring four of\n            the best three-star Michelin chefs in the world, you never know what\n            will arrive on your plate the next time you visit us.\n          </p>\n          <p>\n            The restaurant traces its humble beginnings to{\" \"}\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\n            Peter Pan, that featured for the first time the world's best\n            cuisines in a pan.\n          </p>\n        </div>\n        <div className=\"col-12 col-md-5\">\n          <Card>\n            <CardHeader className=\"bg-primary text-white\">\n              Facts At a Glance\n            </CardHeader>\n            <CardBody>\n              <dl className=\"row p-1\">\n                <dt className=\"col-6\">Started</dt>\n                <dd className=\"col-6\">3 Feb. 2013</dd>\n                <dt className=\"col-6\">Major Stake Holder</dt>\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                <dt className=\"col-6\">Last Year's Turnover</dt>\n                <dd className=\"col-6\">$1,250,375</dd>\n                <dt className=\"col-6\">Employees</dt>\n                <dd className=\"col-6\">40</dd>\n              </dl>\n            </CardBody>\n          </Card>\n        </div>\n        <div className=\"col-12\">\n          <Card>\n            <CardBody className=\"bg-faded\">\n              <blockquote className=\"blockquote\">\n                <p className=\"mb-0\">\n                  You better cut the pizza in four pieces because I'm not hungry\n                  enough to eat six.\n                </p>\n                <footer className=\"blockquote-footer\">\n                  Yogi Berra,\n                  <cite title=\"Source Title\">\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\n                    2014\n                  </cite>\n                </footer>\n              </blockquote>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n      <div className=\"row row-content\">\n        <div className=\"col-12\">\n          <h2>Corporate Leadership</h2>\n        </div>\n        <div className=\"col-12\">\n          <Media list>\n            {props.leaders.leaders.map(leader => (\n              <RenderLeader key={leader.id} leader={leader} />\n            ))}\n          </Media>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to='/home'>Home</Link></li>\n                        <li><Link to='/aboutus'>About Us</Link></li>\n                        <li><Link to='/menu'>Menu</Link></li>\n                        <li><Link to='/contactus'>Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              Nepal<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +123456789<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +123456789<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"#\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2020</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import React from \"react\";\nimport { Card, CardImg, CardImgOverlay, CardTitle} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Loading } from \"./LoadingComponent\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\n\n    function RenderMenuItem({dish, onClick}){\n        return(\n                <Card>\n                    <Link to={`/menu/${dish.id}`} >\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                        <CardImgOverlay>\n                            <CardTitle>{dish.name}</CardTitle>\n                        </CardImgOverlay>\n                    </Link>    \n                </Card>  \n        );\n    }\n\n    const Menu = (props) => {\n\n        const menu= props.dishes.dishes.map((dish) => {\n            return (\n                <div Cardkey={dish.id} className=\"col-12 col-md-5 m-1\">\n                    <RenderMenuItem dish={dish} />\n                      \n                </div>\n            );\n        });\n\n        if (props.dishes.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">            \n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dishes.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\"> \n                        <div className=\"col-12\">\n                            <h4>{props.dishes.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {menu}\n                    </div>\n                </div>\n\n        );\n\n    }\n\n        \n\nexport default Menu;\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Row,\n  Col,\n  Label\n} from \"reactstrap\";\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from \"../shared/baseUrl\";\nimport { FadeTransform, Fade, Stagger } from \"react-animation-components\";\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || val.length <= len;\nconst minLength = len => val => val && val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    this.toggleModal();\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n\n  }\n\n  render() {\n    return (\n      <div>\n        <Button outline onClick={this.toggleModal}>\n          <span className=\"fa fa-pencil\" /> Submit Comment\n        </Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n          <ModalBody>\n            <LocalForm onSubmit={this.handleSubmit}>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"rating\" md={12}>\n                  Rating\n                </Label>\n                <Col md={{ size: 12 }}>\n                  <Control.select\n                    model=\".rating\"\n                    name=\"rating\"\n                    className=\"form-control\"\n                  >\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                  </Control.select>\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"author\" md={12}>\n                  Your Name\n                </Label>\n                <Col md={12}>\n                  <Control.text\n                    model=\".author\"\n                    id=\"author\"\n                    name=\"author\"\n                    placeholder=\"Your Name\"\n                    className=\"form-control\"\n                    validators={{\n                      required,\n                      minLength: minLength(3),\n                      maxLength: maxLength(15)\n                    }}\n                  />\n                  <Errors\n                    className=\"text-danger\"\n                    model=\".author\"\n                    show=\"touched\"\n                    messages={{\n                      required: \"Required\",\n                      minLength: \"Must be greater than 2 characters\",\n                      maxLength: \"Must be 15 characters or less\"\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row className=\"form-group\">\n                <Label htmlFor=\"comment\" md={12}>\n                  Comment\n                </Label>\n                <Col md={12}>\n                  <Control.textarea\n                    model=\".comment\"\n                    id=\"comment\"\n                    name=\"comment\"\n                    rows={5}\n                    className=\"form-control\"\n                  />\n                </Col>\n              </Row>\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                Submit\n              </Button>\n            </LocalForm>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction RenderDish({ dish }) {\n  return (\n    <div className=\"col-12 col-md-5 m-1\">\n    <FadeTransform in \n                tranformProps = {{\n                    exitTranform: \"scale(0.5) translateY(-50%)\"\n                }}>\n        <Card>\n          <CardImg top src={ baseUrl + dish.image} alt={dish.name} />\n          <CardBody>\n            <CardTitle>{dish.name}</CardTitle>\n            <CardText>{dish.description}</CardText>\n          </CardBody>\n        </Card>\n        </FadeTransform>\n    </div>\n  );\n}\nfunction RenderComments({ comments , postComment, dishId}) {\n  if (comments != null) {\n    return (\n      <div className=\"col-12 col-md-5 m-1\">\n        <h4>Comments</h4>\n        <Stagger in>\n        {comments.map(comment => (\n          <Fade in>\n              <ul key={comment.id} className=\"list-unstyled\">\n                \n                  <li className=\"mb-2\">{comment.comment}</li>\n                  <li>\n                  -- {comment.author}{\" \"} \n                  {new Intl.DateTimeFormat(\"en-US\", {\n                    year: \"numeric\",\n                    month: \"short\",\n                    day: \"2-digit\"\n                  }).format(new Date(Date.parse(comment.date)))}\n                  </li>    \n          </ul>\n          </Fade>\n        ))}\n        </Stagger>\n        \n        <CommentForm dishId={dishId} postComment={postComment} />\n      </div>\n    );\n  } else return <div />;\n}\n\n\nconst DishDetail = (props) => {\n  if (props.isLoading) {\n    return(\n        <div className=\"container\">\n            <div className=\"row\">            \n                <Loading />\n            </div>\n        </div>\n    );\n  }\n\n  else if (props.errMess) {\n      return(\n          <div className=\"container\">\n              <div className=\"row\">            \n                  <h4>{props.errMess}</h4>\n              </div>\n          </div>\n      );\n  }\n\n  else if (props.dish != null) \n    return (\n      <div className=\"container\">\n      <div className=\"row\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/menu\">Menu</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"col-12\">\n          <h3>{props.dish.name}</h3>\n          <hr />\n        </div>\n      </div>\n      <div className=\"row\">\n        <RenderDish dish={props.dish} />\n        <RenderComments comments={props.comments}\n        postComment={props.postComment}\n        dishId={props.dish.id} />\n      </div>\n    </div>\n\n    )\n    \n}\nexport default DishDetail;","import * as actiontypes from \"./actiontypes\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\n\nexport const addComment = (comment) => ({\n    type: actiontypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n    \n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => response.json())\n    .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\n};\n\n\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + \"dishes\")\n        .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: actiontypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: actiontypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: actiontypes.ADD_DISHES,\n    payload: dishes\n});\n\n\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n        .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: actiontypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: actiontypes.ADD_COMMENTS,\n    payload: comments\n});\n\n\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: actiontypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: actiontypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: actiontypes.ADD_PROMOS,\n    payload: promos\n});\n\n\n\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading());\n\n  return fetch(baseUrl + \"leaders\")\n    .then(\n      response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error(\n            \"Error \" + response.status + \": \" + response.statusText\n          );\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      }\n    )\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: actiontypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n  type: actiontypes.LEADERS_FAILED,\n  payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n  type: actiontypes.ADD_LEADERS,\n  payload: leaders\n});","export const ADD_COMMENT = \"ADD_COMMENT\";\nexport const DISHES_LOADING = \"DISHES_LOADING\";\nexport const DISHES_FAILED = \"DISHES_FAILED\";\nexport const ADD_DISHES = \"ADD_DISHES\";\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\nexport const ADD_PROMOS = \"ADD_PROMOS\";\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\nexport const ADD_LEADERS = \"ADD_LEADERS\";\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";","import React, { Component } from 'react';\nimport Header from \"./HeaderComponent\";\nimport Home from \"./HomeComponent\";\nimport Contact from \"./ContactComponent\";\nimport About from \"./AboutUsComponent\"\nimport Footer from \"./FooterComponent\";\nimport Menu from './MenuComponents';\nimport DishDetail from './DishDetailComponents';\nimport { Switch, Route, withRouter} from \"react-router-dom\"; \nimport { connect } from \"react-redux\";\nimport { postComment , fetchDishes , fetchComments, fetchPromos, fetchLeaders} from \"../redux/actioncreators\"\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\n\n\nconst mapStateToProps = state => {\n  return{\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  \n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => { dispatch(fetchDishes())},\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  fetchLeaders: () => dispatch(fetchLeaders())\n\n});\n\n\nclass Main extends Component {\n\n\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  render() {\n\n    const HomePage = () => {\n      return (\n        <Home \n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n              dishesLoading={this.props.dishes.isLoading}\n              dishesErrMess={this.props.dishes.errMess}\n\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n              promosLoading={this.props.promotions.isLoading}\n              promosErrMess={this.props.promotions.errMess}\n\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n              leadersLoading={this.props.leaders.isLoading}\n              leadersErrMess={this.props.leaders.errMess}\n          />\n\n      );\n    }\n\n    const DishWithId = ({match}) => {\n      return(\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \n            isLoading={this.props.dishes.isLoading}\n            errMess={this.props.dishes.errMess}\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n            commentsErrMess={this.props.comments.errMess}\n            addComment={this.props.addComment}\n            postComment={this.props.postComment} />\n      );\n    };\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n          <Switch>\n            <Route path=\"/home\" component={HomePage} />\n            <Route exact path=\"/menu\" component={() => <Menu dishes= {this.props.dishes} />} />\n            <Route path=\"/menu/:dishId\" component={DishWithId} />\n            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\n            <Route\n            path=\"/aboutus\"\n            component={() => <About leaders={this.props.leaders} />}\n          />\n          </Switch>\n        </CSSTransition>  \n        </TransitionGroup>  \n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as actiontypes from \"./actiontypes\";\n\n\nexport const Dishes = (state = { isLoading: true,\n    errMess: null,\n    dishes:[]}, action) => {\n    switch (action.type) {\n        case actiontypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case  actiontypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []}\n\n        case  actiontypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};\n\n","import * as actiontypes from \"./actiontypes\";\n\n\nexport const Comments = (state={\n    errMess: null, \n    comments:[]}, \n    action) =>{\n    switch(action.type){\n        case actiontypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n      \n          case actiontypes.COMMENTS_FAILED:\n            return {...state, errMess: action.payload};\n      \n          case actiontypes.ADD_COMMENT:\n              var comment = action.payload;\n              return { ...state, comments: state.comments.concat(comment)};\n      \n          default:\n            return state;\n        }\n      };","import * as actiontypes from \"./actiontypes\";\n\n\nexport const Promotions = (state  = { isLoading: true,\n    errMess: null,\n    promotions:[]}, action) => {\n    switch (action.type) {\n    case actiontypes.ADD_PROMOS:\n    return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n    case actiontypes.PROMOS_LOADING:\n    return {...state, isLoading: true, errMess: null, promotions: []}\n\n    case actiontypes.PROMOS_FAILED:\n    return {...state, isLoading: false, errMess: action.payload};\n\n    default:\n    return state;\n    }\n};","import * as actiontypes from \"./actiontypes\";\n\nexport const Leaders = (state = { isLoading: true,\n    errMess: null,\n    leaders:[]}, action) => {\n    switch (action.type) {\n        case actiontypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case  actiontypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []}\n\n        case  actiontypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","export const InitialFeedback ={\n    firstname:\"\",\n    lastname:\"\",\n    telno:\"\",\n    email:\"\",\n    agree: \"\",\n    contactType:\"\",\n    message:\"\"\n}","import React, { Component } from 'react';\nimport Main from \"./components/MainComponents\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport './App.css';\nimport { ConfigureStore } from \"./redux/configureStore\";\n\nconst store = ConfigureStore();\n\n\n\nclass App extends Component{\n\n\n  \n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers , applyMiddleware} from \"redux\";\nimport { createForms } from \"react-redux-form\";\nimport { Dishes } from \"./dishes\";\nimport { Comments } from \"./comments\";\nimport { Promotions } from \"./promotions\";\nimport { Leaders } from \"./leaders\";\nimport thunk  from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { InitialFeedback } from \"./forms\";\n\n\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n       combineReducers({\n           dishes: Dishes,\n           comments: Comments,\n           promotions: Promotions,\n           leaders: Leaders,\n           ...createForms({\n               feedback: InitialFeedback\n           })\n       }), \n       applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"bootstrap-social/bootstrap-social.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}